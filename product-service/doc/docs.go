// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package doc

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/products": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Add product",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProductForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagdto.ProductResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/swagdto.Error404"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a single product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagdto.ProductResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/swagdto.Error404"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "List all existing products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "List all existing products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagdto.ProductListResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/swagdto.Error404"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.ErrorData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "BAD_REQUEST"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ErrorDetail"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "common.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "Required"
                },
                "message": {
                    "type": "string",
                    "example": "Name field is required"
                },
                "target": {
                    "type": "string",
                    "example": "Name"
                }
            }
        },
        "model.ProductDto": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "Product1"
                },
                "description": {
                    "type": "string",
                    "example": "Product description"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Product 1"
                }
            }
        },
        "model.ProductForm": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "Product1"
                },
                "description": {
                    "type": "string",
                    "example": "Product description"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "swagdto.Error404": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "error": {
                    "$ref": "#/definitions/common.ErrorData"
                },
                "status": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "swagdto.ProductListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/swagdto.ProductSampleListData"
                },
                "error": {
                    "type": "object"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "swagdto.ProductResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/swagdto.ProductSampleData"
                },
                "error": {
                    "type": "object"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "swagdto.ProductSampleData": {
            "type": "object",
            "properties": {
                "product": {
                    "$ref": "#/definitions/model.ProductDto"
                }
            }
        },
        "swagdto.ProductSampleListData": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ProductDto"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "127.0.0.1:8081",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "ProductManagement Service API Document",
	Description: "List APIs of ProductManagement Service",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
