basePath: /api/v1
definitions:
  swagdto.Error400:
    properties:
      data:
        type: object
      error:
        $ref: '#/definitions/swagdto.ErrorBadRequest'
      status:
        example: 400
        type: integer
    type: object
  swagdto.Error403:
    properties:
      data:
        type: object
      error:
        $ref: '#/definitions/swagdto.ErrorAccessDenied'
      status:
        example: 403
        type: integer
    type: object
  swagdto.Error404:
    properties:
      data:
        type: object
      error:
        $ref: '#/definitions/swagdto.ErrorNotFound'
      status:
        example: 404
        type: integer
    type: object
  swagdto.Error500:
    properties:
      data:
        type: object
      error:
        $ref: '#/definitions/swagdto.ErrorInternalError'
      status:
        example: 500
        type: integer
    type: object
  swagdto.ErrorAccessDenied:
    properties:
      code:
        example: ACCESS_DENIED
        type: string
      message:
        example: Access Denied
        type: string
    type: object
  swagdto.ErrorBadRequest:
    properties:
      code:
        example: BAD_REQUEST
        type: string
      details:
        items:
          $ref: '#/definitions/swagdto.ErrorDetail'
        type: array
      message:
        example: Bad Request
        type: string
    type: object
  swagdto.ErrorDetail:
    properties:
      code:
        example: Required
        type: string
      message:
        example: Name field is required
        type: string
      target:
        example: Name
        type: string
    type: object
  swagdto.ErrorInternalError:
    properties:
      code:
        example: INTERNAL_SERVER_ERROR
        type: string
      message:
        example: Internal server error
        type: string
    type: object
  swagdto.ErrorNotFound:
    properties:
      code:
        example: NOT_FOUND
        type: string
      message:
        example: Resource not found
        type: string
    type: object
  swagger.ProductAddData:
    properties:
      product:
        $ref: '#/definitions/swagger.ProductDto'
    type: object
  swagger.ProductAddResponse:
    properties:
      data:
        $ref: '#/definitions/swagger.ProductAddData'
      error:
        type: object
      status:
        example: 200
        type: integer
    type: object
  swagger.ProductDetailDto:
    properties:
      code:
        example: "10011"
        type: string
      createdAt:
        example: "2021-02-02T02:52:24Z"
        type: string
      description:
        example: product description
        type: string
      id:
        example: 1
        type: integer
      meta:
        $ref: '#/definitions/swagger.ProductMeta'
      name:
        example: Product 1
        type: string
      updatedAt:
        example: "2021-02-02T02:52:24Z"
        type: string
    type: object
  swagger.ProductDto:
    properties:
      code:
        example: "10011"
        type: string
      createdAt:
        example: "2021-02-02T02:52:24Z"
        type: string
      description:
        example: product description
        type: string
      id:
        example: 1
        type: integer
      meta:
        $ref: '#/definitions/swagger.ProductMeta'
      name:
        example: Product 1
        type: string
      updatedAt:
        example: "2021-02-02T02:52:24Z"
        type: string
    type: object
  swagger.ProductForm:
    properties:
      code:
        example: "1001"
        type: string
      description:
        example: product description
        type: string
      isActive:
        example: 1
        type: integer
      meta:
        $ref: '#/definitions/swagger.ProductMeta'
      name:
        example: Product 1
        type: string
    type: object
  swagger.ProductListDto:
    properties:
      code:
        example: "10011"
        type: string
      createdAt:
        example: "2021-02-02T02:52:24Z"
        type: string
      description:
        example: product description
        type: string
      id:
        example: 1
        type: integer
      meta:
        $ref: '#/definitions/swagger.ProductMeta'
      name:
        example: Product 1
        type: string
      updatedAt:
        example: "2021-02-02T02:52:24Z"
        type: string
    type: object
  swagger.ProductListResponse:
    properties:
      data:
        $ref: '#/definitions/swagger.ProductSampleListData'
      error:
        type: object
      status:
        example: 200
        type: integer
    type: object
  swagger.ProductMeta:
    properties:
      author:
        example: AuthorA
        type: string
      country:
        example: USA
        type: string
    type: object
  swagger.ProductPatchForm:
    properties:
      code:
        example: "1001"
        type: string
      description:
        example: product description
        type: string
      meta:
        $ref: '#/definitions/swagger.ProductMeta'
      name:
        example: Product 1
        type: string
    type: object
  swagger.ProductResponse:
    properties:
      data:
        $ref: '#/definitions/swagger.ProductSampleData'
      error:
        type: object
      status:
        example: 200
        type: integer
    type: object
  swagger.ProductSampleData:
    properties:
      product:
        $ref: '#/definitions/swagger.ProductDetailDto'
    type: object
  swagger.ProductSampleListData:
    properties:
      product:
        items:
          $ref: '#/definitions/swagger.ProductListDto'
        type: array
    type: object
  swagger.ProductUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/swagger.ProductupdateData'
      error:
        type: object
      status:
        example: 200
        type: integer
    type: object
  swagger.ProductupdateData:
    properties:
      product:
        $ref: '#/definitions/swagger.ProductDto'
    type: object
host: localhost:8083
info:
  contact: {}
  description: List of APIs for Micro Service
  termsOfService: http://swagger.io/terms/
  title: Micro Service API Document
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: List all existing products
      parameters:
      - description: 'filter the code based value (ex: code=1000)'
        in: query
        name: code
        type: string
      - description: 'filter the name based value (ex: name=Ja)'
        in: query
        name: name
        type: string
      - description: Go to a specific page number. Start with 1
        in: query
        name: pageNumber
        type: integer
      - description: Go to specific record number. Start with 1. It will override
          the pageNumber if provided
        in: query
        name: pageOffset
        type: integer
      - description: Page size for the data
        in: query
        name: pageSize
        type: string
      - description: 'Page order. Eg: name desc,createdAt desc'
        in: query
        name: pageOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.ProductListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      security:
      - ApiKeyAuth: []
      summary: List all existing products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Add a new product
      parameters:
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/swagger.ProductForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.ProductAddResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagdto.Error400'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagdto.Error403'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      security:
      - ApiKeyAuth: []
      summary: Add a new product
      tags:
      - Product
  /products/{id}:
    delete:
      description: Delete a specific product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.ProductResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagdto.Error403'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagdto.Error404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      security:
      - ApiKeyAuth: []
      summary: Delete a product
      tags:
      - Product
    get:
      description: Get a specific product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.ProductResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagdto.Error403'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagdto.Error404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      security:
      - ApiKeyAuth: []
      summary: Get a product
      tags:
      - Product
    patch:
      description: Update a specific product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/swagger.ProductPatchForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.ProductUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagdto.Error400'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagdto.Error403'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagdto.Error404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      security:
      - ApiKeyAuth: []
      summary: Update a product
      tags:
      - Product
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
